<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACC
        CAAAAk1TRnQBSQFMAwEBAAFAAQABQAEAARABAAEQAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABQAMA
        ARADAAEBAQABIAYAARASAAFaATYBSgH/ATwBNQFiAf8BRwE9AVwB/wE5AUMBYgH/ASsBSAF+Af8BMAFK
        AWAB/wEyAUYBjwH/ATIBQAGQAf8BLgE1AYYB/wEzAUEBmQH/AToBRAGCAf8BPwFLAY4B/wE0AUUBcAH/
        AVcBVQGKAf8BoAGJAcQB/wGkAZgB4AH/wAABTQFAAWYB/wFNASoBNAH/AVYBQQFSAf8BPQFIAVcB/wE5
        AVYBYwH/AUsBXAFsAf8BRQFHAXQB/wEyATkBgQH/AUABPwFyAf8BMwE8AYoB/wEuATUBhAH/AToBRAGI
        Af8BLAE5AWAB/wEjAS0BVwH/AVABUgFiAf8BXgGBAa0B/8AAAV0BZAGEAf8BNAE9AXoB/wFmAWIBegH/
        ATgBSwFiAf8BUwFwAXYB/wFRAV8BfgH/AU0BTgFvAf8BSAE/AUoB/wFvAV4BYQH/AUEBOQFvAf8CPQGD
        Af8BRgFQAZYB/wEzAT0BYwH/ARoBJAFNAf8BNQFFAWAB/wFIAXUBsQH/wAABkAF0AXwB/wE+AU0BhgH/
        AWIBWwFnAf8BOgFHAV4B/wFNAXwBfgH/AVYBdQGKAf8BPQFIAXsB/wJfAVQB/wFkAVwBWQH/ATMBQAFi
        Af8BOgE/AXsB/wFQAVsBsAH/ATYBQQFYAf8BKAE2AWQB/wEoATYBYQH/ATgBTwF5Af/AAAF5AVsBXAH/
        AlkBaQH/AUUBTwFqAf8BQAFSAWoB/wFDAWEBhAH/AUIBZQGKAf8BbgFtAYQB/wFRAV4BeAH/AVIBTQFk
        Af8BMwFCAVwB/wFBAUkBoAH/AUoBVwGCAf8BOQFBAU8B/wE1AUYBfAH/ATwBUgF9Af8BSwFxAZgB/8AA
        AUYBQAFdAf8BTwFqAYoB/wFBAVMBfwH/ATwBUAGMAf8BTwFvAZcB/wE5AW0BngH/AWsBbwF3Af8BaAFm
        AV4B/wFPAVIBfQH/AUMBUQGRAf8BNwFCAWoB/wFEAVEBaAH/AUEBSwFgAf8BOwFKAXgB/wE7AVsBoAH/
        AVkBkAHFAf/AAAEtASgBZwH/AVUBZAGKAf8BVQFlAYQB/wE5AUgBdgH/AVIBeAGUAf8BSwF/AbQB/wFF
        AWkBigH/AWEBbAFnAf8BUAFPAWQB/wFIAVoBbQH/AT8BTwGeAf8BSQFZAYcB/wFDAVIBcgH/AUIBXgGV
        Af8BPQFTAXoB/wEpAUoBoAH/wAACMgFoAf8BQgFDAWEB/wFHAUABYQH/AUABSwF8Af8BPQFLAXsB/wFr
        AYYBrgH/AWABgAGsAf8BZAF4AYsB/wFhAWQBjQH/AZcBoQHJAf8BUQFaAbYB/wF/AY0BywH/AXUBkwHE
        Af8BTQFYAXsB/wEwAU4BrwH/ATgBTQGRAf/AAAElASYBYgH/AT8BPQFXAf8BRAE8AV0B/wFAAUwBdgH/
        AUwBZQGtAf8BkgGyAcoB/wFZAXUBhQH/AUoBYwGJAf8BZwF6AaUB/wE/AWgBnAH/ATsBNAFYAf8BWQFl
        Ab8B/wGKAaABxwH/AUcBYgGSAf8BWgFpAZsB/wE8AU8BkgH/wAABKQEfAUoB/wFIAUIBTAH/AUABUQF+
        Af8BQwFJAWkB/wE5AUIBeAH/AboBxQHbAf8BTgF4AWMB/wEzAUYBbAH/AUwBcgGPAf8BOAFJAX4B/wFS
        AUEBQwH/AT4BSgGeAf8BiQGhAbUB/wFGAXMBsgH/AWcBdQGbAf8BPwFVAacB/8AAAWYBTAFTAf8BUwFS
        AVgB/wFFAVoBhwH/AToBQgFoAf8BUAFlAZMB/wGqAa8BvQH/AZ8BsAGWAf8BUAF+AWoB/wE8AXsBjwH/
        AVABUwF4Af8BRAFBAWMB/wFaAVMBdQH/AW8BewGOAf8BgAGPAbAB/wFEAVwBrgH/AUABVQGeAf/AAAGP
        AXABXwH/AXUBZQFiAf8BXAFeAWYB/wFWAWgBjAH/AUMBUAGMAf8BhAGMAa4B/wGtAacBswH/AVsBgQGH
        Af8BPAFVAZsB/wFfAU0BSgH/AVIBQAE9Af8BVgFOAWEB/wFaAWQBcgH/AW0BbwGLAf8BNAE9AYkB/wEr
        ATwBhwH/wAABbAFcAVAB/wFSAVgBUQH/AUIBYgGOAf8BgwGmAccB/wFcAWMBcgH/AX4BgQGPAf8BmQGj
        AbYB/wFvAYQBpwH/AWABbgGTAf8BawFXAVwB/wFMAUIBWwH/AWIBagFmAf8BdQGDAYQB/wJbAXYB/wI4
        AXgB/wEZAScBigH/wAABUAFTAU4B/wF6AYEBYwH/ATsBXAGMAf8BTQFcAYcB/wGNAZ0BtAH/AaoBwwHb
        Af8BcgF9AYgB/wFpAXQBggH/AYMBlQGyAf8BpgGqAc0B/wGaAZ8BtwH/AWkBfAF9Af8BiQGbAZwB/wFa
        AVcBcgH/AUEBPQFnAf8BHAEhAXwB/8AAAZ0BfgFpAf8BsgGqAaAB/wE7AVsBoAH/AUwBYQGyAf8BsAGs
        AbcB/wGyAbwBywH/AWcBfwGKAf8BUgFnAXEB/wFkAaABwgH/AaYB1AHoAf8BjgGNAaUB/wFZAVsBewH/
        AXoBgAGnAf8BSgFCAXQB/wEdASEBbAH/ASkBIwFkAf/AAAGgAXkBagH/AYQBYgFkAf8BeAFfAYcB/wI+
        AaIB/wGDAYYBtAH/AYoBngHbAf8BbAGOAbMB/wFRAV8BZwH/AT4BfQGjAf8BaQGYAdYB/wGFAY0BxwH/
        AZIBiwGoAf8BXQFTAaUB/wE5AScBegH/ATEBJAFfAf8BLAEhAVsB/8AAAUIBTQE+BwABPgMAASgDAAFA
        AwABEAMAAQEBAAEBBQABgBcAA/+BAAs=
</value>
  </data>
  <metadata name="metroSetContextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>127, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>